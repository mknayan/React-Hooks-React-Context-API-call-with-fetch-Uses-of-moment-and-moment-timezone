[{"/home/mknayan/React-Projects/Inter/craftsmen/src/index.js":"1","/home/mknayan/React-Projects/Inter/craftsmen/src/App.js":"2","/home/mknayan/React-Projects/Inter/craftsmen/src/reportWebVitals.js":"3","/home/mknayan/React-Projects/Inter/craftsmen/0/src/index.js":"4","/home/mknayan/React-Projects/Inter/craftsmen/0/src/App.js":"5","/home/mknayan/React-Projects/Inter/craftsmen/0/src/reportWebVitals.js":"6","/home/mknayan/React-Projects/Inter/craftsmen/0/src/context/GlobalState.js":"7","/home/mknayan/React-Projects/Inter/craftsmen/0/src/components/SearchBox.jsx":"8","/home/mknayan/React-Projects/Inter/craftsmen/0/src/components/SearchResults.jsx":"9","/home/mknayan/React-Projects/Inter/craftsmen/0/src/components/CountryDetails.jsx":"10","/home/mknayan/React-Projects/Inter/craftsmen/0/src/context/AppReducer.js":"11","/home/mknayan/React-Projects/Inter/craftsmen/0/src/components/CountryTime.jsx":"12"},{"size":500,"mtime":1607666818125,"results":"13","hashOfConfig":"14"},{"size":1589,"mtime":1607677295412,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607666818125,"results":"16","hashOfConfig":"14"},{"size":500,"mtime":1607666818125,"results":"17","hashOfConfig":"18"},{"size":569,"mtime":1607689498571,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607666818125,"results":"20","hashOfConfig":"18"},{"size":1146,"mtime":1607690999818,"results":"21","hashOfConfig":"18"},{"size":2025,"mtime":1607695172373,"results":"22","hashOfConfig":"18"},{"size":1827,"mtime":1607695231963,"results":"23","hashOfConfig":"18"},{"size":1807,"mtime":1607692647758,"results":"24","hashOfConfig":"18"},{"size":538,"mtime":1607692248340,"results":"25","hashOfConfig":"18"},{"size":1032,"mtime":1607695747909,"results":"26","hashOfConfig":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"mamell",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"tetatd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/home/mknayan/React-Projects/Inter/craftsmen/src/index.js",[],["57","58"],"/home/mknayan/React-Projects/Inter/craftsmen/src/App.js",["59","60"],"/home/mknayan/React-Projects/Inter/craftsmen/src/reportWebVitals.js",[],"/home/mknayan/React-Projects/Inter/craftsmen/0/src/index.js",[],["61","62"],"/home/mknayan/React-Projects/Inter/craftsmen/0/src/App.js",[],"/home/mknayan/React-Projects/Inter/craftsmen/0/src/reportWebVitals.js",[],"/home/mknayan/React-Projects/Inter/craftsmen/0/src/context/GlobalState.js",[],"/home/mknayan/React-Projects/Inter/craftsmen/0/src/components/SearchBox.jsx",["63","64","65"],"import React, { Suspense, useState, useEffect, useContext } from \"react\";\nimport cityTimezones from \"city-timezones\";\n\nimport { GlobalContext } from '../context/GlobalState';\n\nconst fetchCountry = query => {\n    const url = 'https://restcountries.eu/rest/v2/capital/' + query;\n    return fetch(url).then(function (response) {\n        return response.json();\n    })\n};\n\nconst SearchBox = () => {\n\n    const [query, setQuery] = useState('dhaka');\n    const [country, setCountry] = useState([]);\n    const { updateCountryList, updateSelectedCountry, updateSelectedTimeZone } = useContext(GlobalContext);\n\n    useEffect(() => {\n        async function fetchData() {\n            updateCountryList([])\n            updateSelectedCountry('')\n            updateSelectedTimeZone('')\n            if (query != '') {\n                await fetchCountry(query).then(function (data) {\n                    if (data.status) {\n                        setCountry([])\n                    } else {\n                        setCountry(data)\n                        updateCountryList(data)\n                        updateSelectedCountry(data[0])\n\n                        if (data[0].capital) {\n                            const timezoneArray = cityTimezones.lookupViaCity(data[0].capital)\n                            let timezone = ''\n                            if (timezoneArray && timezoneArray.length > 0) {\n                                timezone = timezoneArray[0].timezone\n                            }\n                            updateSelectedTimeZone(timezone)\n                        }\n                    }\n                })\n            }\n        }\n        fetchData()\n    }, [query]);\n\n    return (\n        <Suspense>\n            <div className=\"col-md-4\">\n                <p className=\"text-center\"><b>Search with capital</b></p>\n                <input type=\"text\" name=\"search\" className=\"form-control\" value={query} onChange={e => setQuery(e.target.value)} />\n            </div>\n        </Suspense>\n    )\n};\n\nexport default SearchBox;","/home/mknayan/React-Projects/Inter/craftsmen/0/src/components/SearchResults.jsx",[],"/home/mknayan/React-Projects/Inter/craftsmen/0/src/components/CountryDetails.jsx",["66","67","68","69"],"import React, { Suspense, useState, useEffect } from \"react\";\n\nconst fetchCountry = query => {\n    const url = 'https://restcountries.eu/rest/v2/capital/' + query;\n    return fetch(url).then(function (response) {\n        return response.json();\n    })\n};\n\nconst CountryDetails = () => {\n\n    const [query, setQuery] = useState('dhaka');\n    const [country, setCountry] = useState({});\n\n    useEffect(() => {\n        async function fetchData() {\n            if (query != '') {\n                await fetchCountry(query).then(function (data) {\n                    // console.log('Request succeeded with JSON response', data);\n                    if (data.status) {\n                        setCountry([])\n                    } else {\n                        setCountry(country)\n                    }\n                })\n            }\n        }\n        fetchData()\n    }, [query]);\n\n    return (\n        <Suspense>\n            <div className=\"col-md-4 left-border\">\n                <p className=\"text-center\"><b>Country Details</b></p>\n                <div className=\"text-center\">\n                    Country Name: Bangladesh<br />\n                    Capital: Dhaka<br />\n                    Languages: Bengali<br />\n                    Flag: <img src=\"https://restcountries.eu/data/bgd.svg\" />\n                </div>\n                <div className=\"text-center\">Country Time : 2020-12-11 00:37:19 (Los Angeles)</div>\n                {/* <GetTimeNow /> */}\n            </div>\n        </Suspense>\n    )\n};\n\nexport default CountryDetails;","/home/mknayan/React-Projects/Inter/craftsmen/0/src/context/AppReducer.js",["70"],"export default (state, action) => {\n    switch (action.type) {\n        case 'UPDATE_COUNTRY':\n            console.log('UPDATE_COUNTRY', action.payload)\n            return {\n                ...state,\n                countries: action.payload\n            };\n        case 'UPDATE_SELECTED_COUNTRY':\n            return {\n                ...state,\n                selectedCountry: action.payload\n            };\n        case 'UPDATE_SELECTED_TIMEZONE':\n            return {\n                ...state,\n                selectedTimezone: action.payload\n            };\n        default: return state;\n    }\n}","/home/mknayan/React-Projects/Inter/craftsmen/0/src/components/CountryTime.jsx",["71","72","73"],"import React, { Suspense, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport tim from 'moment-timezone'\nimport cityTimezones from \"city-timezones\";\n\nimport { GlobalContext } from '../context/GlobalState';\n\nconst GetTimeNow = function (selectedTimezone) {\n    setInterval(() => {\n        if (selectedTimezone != '') {\n            const time_moment = moment().tz(selectedTimezone).format(\"hh:mm:ss a\");\n            const elementExists = document.getElementById(\"timenow\");\n            if (elementExists) {\n                document.getElementById(\"timenow\").innerHTML = time_moment;\n            }\n        }\n    }, 1000)\n}\n\nconst CountryTime = () => {\n\n    const { selectedTimezone } = useContext(GlobalContext);\n\n    useEffect(() => {\n        clearInterval(GetTimeNow)\n        GetTimeNow(selectedTimezone)\n    }, [selectedTimezone]);\n\n    return (\n        <Suspense>\n            <div className=\"text-center\">Country Time: <span id=\"timenow\"></span></div>\n        </Suspense>\n    )\n};\n\nexport default CountryTime;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":40,"column":19,"nodeType":"84","endLine":40,"endColumn":70},{"ruleId":"74","replacedBy":"85"},{"ruleId":"76","replacedBy":"86"},{"ruleId":"78","severity":1,"message":"87","line":16,"column":12,"nodeType":"80","messageId":"81","endLine":16,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":24,"column":23,"nodeType":"90","messageId":"91","endLine":24,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":46,"column":8,"nodeType":"94","endLine":46,"endColumn":15,"suggestions":"95"},{"ruleId":"78","severity":1,"message":"96","line":12,"column":19,"nodeType":"80","messageId":"81","endLine":12,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":17,"column":23,"nodeType":"90","messageId":"91","endLine":17,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":29,"column":8,"nodeType":"94","endLine":29,"endColumn":15,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"83","line":39,"column":27,"nodeType":"84","endLine":39,"endColumn":78},{"ruleId":"99","severity":1,"message":"100","line":1,"column":1,"nodeType":"101","endLine":21,"endColumn":2},{"ruleId":"78","severity":1,"message":"102","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":11},{"ruleId":"78","severity":1,"message":"103","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":10,"column":30,"nodeType":"90","messageId":"91","endLine":10,"endColumn":32},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'GetTimeNow' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["104"],["105"],"'country' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'updateCountryList', 'updateSelectedCountry', and 'updateSelectedTimeZone'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'setQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'country'. Either include it or remove the dependency array. You can also do a functional update 'setCountry(c => ...)' if you only need 'country' in the 'setCountry' call.",["107"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'tim' is defined but never used.","'cityTimezones' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [query, updateCountryList, updateSelectedCountry, updateSelectedTimeZone]",{"range":"112","text":"113"},"Update the dependencies array to be: [country, query]",{"range":"114","text":"115"},[1663,1670],"[query, updateCountryList, updateSelectedCountry, updateSelectedTimeZone]",[866,873],"[country, query]"]